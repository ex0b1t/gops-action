name: Pull Request
on:
  pull_request_target:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v3.8.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Unit tests
        run: npm run test --if-present
      - name: Build
        run: npm run build
      - name: Package
        run: npm run package
      - name: Git Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          file_pattern: 'dist/**'
  approve:
    name: Approve PR
    runs-on: ubuntu-latest
    needs: [build]
    if: success()
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Approve PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            })
  merge:
    name: Merge Dependabot PR
    runs-on: ubuntu-latest
    needs: [build, approve]
    if: success() && github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Merge PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash'
            })
